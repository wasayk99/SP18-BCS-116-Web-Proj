[{"H:\\Web Game Proj\\game\\src\\index.js":"1","H:\\Web Game Proj\\game\\src\\App.js":"2","H:\\Web Game Proj\\game\\src\\components\\TopBar.js":"3","H:\\Web Game Proj\\game\\src\\components\\MainPage.js":"4","H:\\Web Game Proj\\game\\src\\Unavailable\\NoGame.js":"5","H:\\Web Game Proj\\game\\src\\Games\\Chrome_Dino\\Dino.js":"6","H:\\Web Game Proj\\game\\src\\Games\\Snake\\SnakeGame.jsx":"7","H:\\Web Game Proj\\game\\src\\Games\\Snake\\GameOver.jsx":"8","H:\\Web Game Proj\\game\\src\\Games\\TicTacToe\\Game.js":"9","H:\\Web Game Proj\\game\\src\\Games\\MineSweeper\\MS.js":"10"},{"size":198,"mtime":1608896964281,"results":"11","hashOfConfig":"12"},{"size":981,"mtime":1611254195261,"results":"13","hashOfConfig":"12"},{"size":1574,"mtime":1611252646336,"results":"14","hashOfConfig":"12"},{"size":1204,"mtime":1611256458093,"results":"15","hashOfConfig":"12"},{"size":328,"mtime":1608907791025,"results":"16","hashOfConfig":"12"},{"size":672,"mtime":1611242975891,"results":"17","hashOfConfig":"12"},{"size":10843,"mtime":1611245805390,"results":"18","hashOfConfig":"12"},{"size":734,"mtime":1611245918009,"results":"19","hashOfConfig":"12"},{"size":5918,"mtime":1611248259569,"results":"20","hashOfConfig":"12"},{"size":3359,"mtime":1611252587550,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ldtpyk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"H:\\Web Game Proj\\game\\src\\index.js",[],["47","48"],"H:\\Web Game Proj\\game\\src\\App.js",[],"H:\\Web Game Proj\\game\\src\\components\\TopBar.js",["49","50","51","52","53","54"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./TopBar.css\"\r\n\r\nexport const TopBar = () => {\r\n    return (\r\n        \r\n        <nav className =\"Navbar\">\r\n            <div >\r\n                <img src=\"/Images/GameLogo.png\" alt=\"logo\" className = \"logo\"/>\r\n            </div>\r\n            <ul >\r\n                <li className=\"no_bull\">\r\n                <Link to=\"/Not\" className=\"NoUnder\">\r\n                        <a className=\"NoUnder\" href =''>  New Games</a>\r\n                        </Link>\r\n                </li>\r\n                <li className=\"no_bull\">\r\n                    <Link to=\"/Not\" className=\"NoUnder\">\r\n                    <a className=\"NoUnder\" href=\"\">Upload Games</a>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"no_bull\">\r\n                    <Link to=\"/Not\" className=\"NoUnder\">\r\n                        <a className=\"NoUnder\" href=\"\">Multiplayer Games</a>\r\n                        </Link>\r\n                </li>\r\n                <li className=\"no_bull\">\r\n                    <Link to=\"/Not\" className=\"NoUnder\">\r\n                        <a className=\"NoUnder\" href=\"\">Puzzle Games</a>\r\n                        </Link>\r\n                </li>\r\n                <li className=\"no_bull2\">\r\n                    <Link to=\"/\" className=\"NoUnder2\">\r\n                        <a className=\"NoUnder2\" href=\"\">Salamander Games</a>\r\n                        </Link>\r\n                </li>\r\n                \r\n            </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default TopBar;\r\n","H:\\Web Game Proj\\game\\src\\components\\MainPage.js",["55"],"H:\\Web Game Proj\\game\\src\\Unavailable\\NoGame.js",["56"],"import React from 'react'\r\nimport \"./UnAvailable.css\"\r\nimport image from \"./404-error-background_23-2148110015.jpg\"\r\n\r\n\r\n\r\n\r\nexport const NoGame = () => {\r\n    return (\r\n        <div className=\"Unavailable\">\r\n            <img src = {image} className=\"Unavailable\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoGame;\r\n\r\n\r\n","H:\\Web Game Proj\\game\\src\\Games\\Chrome_Dino\\Dino.js",["57","58"],"H:\\Web Game Proj\\game\\src\\Games\\Snake\\SnakeGame.jsx",[],"H:\\Web Game Proj\\game\\src\\Games\\Snake\\GameOver.jsx",[],"H:\\Web Game Proj\\game\\src\\Games\\TicTacToe\\Game.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ReactTooltip from 'react-tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile, faUndo, faRedo } from '@fortawesome/free-solid-svg-icons';\n\nfunction Square(props) {\n    return (\n        \n        <div className=\"square2\">\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n            </button>\n            </div>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            move: 0,\n            squares: Array(9).fill(null),\n            squaresHistory: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        const squaresHistory = this.state.squaresHistory.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        let x = 'X';\n        let o = 'O';\n\n        let move = this.state.move;\n        squaresHistory[move] = this.state.squares;\n        move++;\n        squares[i] = this.state.xIsNext ? x : o;\n\n        this.setState({\n            move: move,\n            squares: squares,\n            squaresHistory: squaresHistory,\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleUndo() {\n        let move = this.state.move;\n\n        const squaresHistory = this.state.squaresHistory.slice();\n        squaresHistory[move] = this.state.squares;\n\n        --move;\n        this.setState({\n            move: move,\n            squares: this.state.squaresHistory[move],\n            squaresHistory: squaresHistory,\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleRedo() {\n        let move = this.state.move;\n        move++;\n        this.setState({\n            move: move,\n            squares: this.state.squaresHistory[move],\n            xIsNext: !this.state.xIsNext,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    handleNewGame() {\n        this.setState({\n            move: 0,\n            squares: Array(9).fill(null),\n            squaresHistory: Array(9).fill(null),\n            xIsNext: true,\n        });\n\n        this.props.onToggleX(this.state.xIsNext);\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                extraClass={this.state.xIsNext ? 'revert' : ''}\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n                <div className=\"icons\">\n                    <button\n                        data-tip=\"Undo\"\n                        className=\"function-button\"\n                        disabled={this.state.move === 0}\n                        onClick={() => this.handleUndo()}>\n                        <FontAwesomeIcon icon={faUndo} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\" />\n                    <button\n                        data-tip=\"Redo\"\n                        className=\"function-button\"\n                        disabled={this.state.squaresHistory[this.state.move + 1] === null}\n                        onClick={() => this.handleRedo()}>\n                        <FontAwesomeIcon icon={faRedo} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\" />\n                    <button\n                        data-tip=\"New Game\"\n                        className=\"function-button\"\n                        onClick={() => this.handleNewGame()}>\n                        <FontAwesomeIcon icon={faFile} size=\"4x\" />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"warning\" effect=\"float\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            classes: 'game',\n        };\n    }\n\n    onToggleX = x => {\n        this.setState({\n            classes: x ? 'revert game' : 'game',\n        });\n    };\n    render() {\n        return (\n            <div className={this.state.classes}>\n                <p>.</p>\n                <div className=\"game-board\">\n                    <Board onToggleX={this.onToggleX} />\n                </div>\n            </div>\n        );\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\nexport default Game;\n","H:\\Web Game Proj\\game\\src\\Games\\MineSweeper\\MS.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"import React, { useState } from 'react';\nimport './App.css';\n\nfunction MS() {\n  const [bombs, setBombs] = useState([])\n  const [visited, setVisited] = useState([])\n\n  const buttonStyle = {\n    width: 40,\n    height: 40,\n    backgroundColor: '#888',\n    color: 'black',\n    verticalAlign: 'top',\n    fontSize: '32px',\n    fontFamily: 'Arial, Helvetica, sans-serif;',\n    borderLeft: '5px solid rgb(220,220,220)',\n    borderTop: '5px solid rgb(220,220,220)',\n    borderBottom: '5px solid #333',\n    borderRight: '5px solid #333',\n    display: 'inline-block'\n  }\n  const visitStyle = {\n    width: 48,\n    height: 48,\n    backgroundColor: '#555',\n    color: 'white',\n    fontWeight: 'bold',\n    border: '1px solid black',\n    verticalAlign: 'top',\n    fontSize: '32px',\n    fontFamily: 'Montserrat, sans-serif',\n    display: 'inline-block'\n  }\n\n  const generateBombs = () => {\n    let bombArr = Array(10).fill(0).map(elem => Array(10).fill(0))\n\n    for(let i = 0; i < bombArr.length; i++){\n      let bombPos = Math.floor(Math.random() * 10)\n      bombArr[i][bombPos] = 'X'\n    }\n\n    for(let i = 0; i < bombArr.length; i++){\n      for(let j = 0; j < bombArr[i].length; j++){\n        if(bombArr[i][j] !== 'X'){\n          let sum = 0\n\n          if(i > 0 && bombArr[i-1][j] == 'X') sum++\n          if(i < bombArr.length - 1 && bombArr[i+1][j] == 'X') sum++\n          if(j < bombArr.length - 1 && bombArr[i][j+1] == 'X') sum++\n          if(j > 0 && bombArr[i][j-1] == 'X') sum++\n          if(i < bombArr.length - 1 && j > 0 && bombArr[i+1][j-1] == 'X') sum++\n          if(i < bombArr.length - 1 && j < bombArr.length - 1 && bombArr[i+1][j+1] == 'X') sum++\n          if(i > 0 && j > 0 && bombArr[i-1][j-1] == 'X' ) sum++\n          if(i > 0 && j < bombArr.length - 1 && bombArr[i-1][j+1] == 'X' ) sum++\n\n          bombArr[i][j] = sum\n        }\n      }\n    }\n    setBombs(bombArr)\n\n    let cover = Array(10).fill(0).map(elem => Array(10).fill(0))\n    setVisited(cover)\n  }\n\n  const visitCell = (i, j) => {\n    if(bombs[i][j] == 'X') {\n      alert(\"You lost! Generate again!\")\n      window.location.reload();\n    }\n    dfsCells(i, j)\n    visited[i][j] = 1\n    setVisited([...visited])\n  }\n\n  function dfsCells(i, j) {\n    if(i < 0 || i > visited.length - 1 || j < 0 || j > visited[0].length - 1 || visited[i][j] == 1 || bombs[i][j] == 'X') return\n\n    visited[i][j] = 1\n\n    setVisited([...visited])\n    if(bombs[i][j] < 1){\n      dfsCells(i+1, j)\n      dfsCells(i-1, j)\n      dfsCells(i, j+1)\n      dfsCells(i, j-1)\n    }\n  }\n\n  return (\n    <div>\n      \n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>.</p>\n        <div className={'title'}> MineSweeper By Salamanader & Co. </div>\n        <div className={'subtext'}> Press Generate New Game To Start</div>\n\n        {bombs.map((arr, index) =>\n          <div>\n            {arr.map((elem, i) =>\n              <div\n                onClick={() => visitCell(index, i)}\n                style={visited[index][i] == 0 ? buttonStyle : visitStyle}>\n                {visited[index][i] == 0 ? null : bombs[index][i] == 0 ? '' : bombs[index][i] }\n              </div>\n            )}\n          </div>\n        )}\n        <button\n          className={'generate'}\n          onClick={() => generateBombs()}>Generate New Game</button>\n      </header>\n\n      </div>\n      </div>\n  );\n}\n\nexport default MS;\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":15,"column":25,"nodeType":"84","endLine":15,"endColumn":57},{"ruleId":"82","severity":1,"message":"83","line":20,"column":21,"nodeType":"84","endLine":20,"endColumn":52},{"ruleId":"82","severity":1,"message":"83","line":25,"column":25,"nodeType":"84","endLine":25,"endColumn":56},{"ruleId":"82","severity":1,"message":"83","line":30,"column":25,"nodeType":"84","endLine":30,"endColumn":56},{"ruleId":"82","severity":1,"message":"83","line":35,"column":25,"nodeType":"84","endLine":35,"endColumn":57},{"ruleId":"78","severity":1,"message":"85","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":10},{"ruleId":"86","severity":1,"message":"87","line":11,"column":13,"nodeType":"84","endLine":11,"endColumn":56},{"ruleId":"78","severity":1,"message":"88","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":19},{"ruleId":"78","severity":1,"message":"89","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":14},{"ruleId":"78","severity":1,"message":"90","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":48,"column":39,"nodeType":"93","messageId":"94","endLine":48,"endColumn":41},{"ruleId":"91","severity":1,"message":"92","line":49,"column":56,"nodeType":"93","messageId":"94","endLine":49,"endColumn":58},{"ruleId":"91","severity":1,"message":"92","line":50,"column":56,"nodeType":"93","messageId":"94","endLine":50,"endColumn":58},{"ruleId":"91","severity":1,"message":"92","line":51,"column":39,"nodeType":"93","messageId":"94","endLine":51,"endColumn":41},{"ruleId":"91","severity":1,"message":"92","line":52,"column":67,"nodeType":"93","messageId":"94","endLine":52,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":53,"column":84,"nodeType":"93","messageId":"94","endLine":53,"endColumn":86},{"ruleId":"91","severity":1,"message":"92","line":54,"column":50,"nodeType":"93","messageId":"94","endLine":54,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":55,"column":67,"nodeType":"93","messageId":"94","endLine":55,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":68,"column":20,"nodeType":"93","messageId":"94","endLine":68,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":78,"column":95,"nodeType":"93","messageId":"94","endLine":78,"endColumn":97},{"ruleId":"91","severity":1,"message":"92","line":78,"column":115,"nodeType":"93","messageId":"94","endLine":78,"endColumn":117},{"ruleId":"91","severity":1,"message":"92","line":105,"column":42,"nodeType":"93","messageId":"94","endLine":105,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":106,"column":36,"nodeType":"93","messageId":"94","endLine":106,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":106,"column":66,"nodeType":"93","messageId":"94","endLine":106,"endColumn":68},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BG' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'createClass' is defined but never used.","'jump' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]